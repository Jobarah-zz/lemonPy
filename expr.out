State 0:
          input ::= * opt_eols stmts
          eols ::= * eols TK_EOL
          eols ::= * TK_EOL
          opt_eols ::= * eols
      (6) opt_eols ::= *

                        TK_EOL shift-reduce 4      eols ::= TK_EOL
                         input accept
                      opt_eols shift        5      
                          eols shift        34     
                     {default} reduce       6      opt_eols ::=

State 1:
          eols ::= eols * TK_EOL
          stmt ::= * assign_stmt
          stmt ::= * print_stmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          while_stmt ::= * RW_WHILE TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt
          if_stmt ::= * RW_IF TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt optional_else
          optional_else ::= RW_ELSE eols * block_stmt
          block_stmt ::= * TK_LEFT_CB opt_eols stmts opt_eols TK_RIGHT_CB
          block_stmt ::= * stmt
          assign_stmt ::= * TK_VAR OP_ASSIGN expr
          print_stmt ::= * RW_PRINT expr TK_COMMA conv_type

                        TK_EOL shift-reduce 3      eols ::= eols TK_EOL
                      RW_WHILE shift        40     
                         RW_IF shift        37     
                    TK_LEFT_CB shift        17     
                        TK_VAR shift        33     
                      RW_PRINT shift        11     
                          stmt shift-reduce 16     block_stmt ::= stmt
                    block_stmt shift-reduce 13     optional_else ::= RW_ELSE eols block_stmt
                       if_stmt shift-reduce 9      stmt ::= if_stmt
                    while_stmt shift-reduce 10     stmt ::= while_stmt
                    print_stmt shift-reduce 8      stmt ::= print_stmt
                   assign_stmt shift-reduce 7      stmt ::= assign_stmt

State 2:
          stmt ::= * assign_stmt
          stmt ::= * print_stmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          while_stmt ::= * RW_WHILE TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt
          if_stmt ::= * RW_IF TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt optional_else
          if_stmt ::= RW_IF TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL * block_stmt optional_else
          block_stmt ::= * TK_LEFT_CB opt_eols stmts opt_eols TK_RIGHT_CB
          block_stmt ::= * stmt
          assign_stmt ::= * TK_VAR OP_ASSIGN expr
          print_stmt ::= * RW_PRINT expr TK_COMMA conv_type

                      RW_WHILE shift        40     
                         RW_IF shift        37     
                    TK_LEFT_CB shift        17     
                        TK_VAR shift        33     
                      RW_PRINT shift        11     
                          stmt shift-reduce 16     block_stmt ::= stmt
                    block_stmt shift        24     
                       if_stmt shift-reduce 9      stmt ::= if_stmt
                    while_stmt shift-reduce 10     stmt ::= while_stmt
                    print_stmt shift-reduce 8      stmt ::= print_stmt
                   assign_stmt shift-reduce 7      stmt ::= assign_stmt

State 3:
          stmt ::= * assign_stmt
          stmt ::= * print_stmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          while_stmt ::= * RW_WHILE TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt
          while_stmt ::= RW_WHILE TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL * block_stmt
          if_stmt ::= * RW_IF TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt optional_else
          block_stmt ::= * TK_LEFT_CB opt_eols stmts opt_eols TK_RIGHT_CB
          block_stmt ::= * stmt
          assign_stmt ::= * TK_VAR OP_ASSIGN expr
          print_stmt ::= * RW_PRINT expr TK_COMMA conv_type

                      RW_WHILE shift        40     
                         RW_IF shift        37     
                    TK_LEFT_CB shift        17     
                        TK_VAR shift        33     
                      RW_PRINT shift        11     
                          stmt shift-reduce 16     block_stmt ::= stmt
                    block_stmt shift-reduce 11     while_stmt ::= RW_WHILE TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt
                       if_stmt shift-reduce 9      stmt ::= if_stmt
                    while_stmt shift-reduce 10     stmt ::= while_stmt
                    print_stmt shift-reduce 8      stmt ::= print_stmt
                   assign_stmt shift-reduce 7      stmt ::= assign_stmt

State 4:
          stmts ::= * stmts eols stmt
          stmts ::= * stmt
          stmt ::= * assign_stmt
          stmt ::= * print_stmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          while_stmt ::= * RW_WHILE TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt
          if_stmt ::= * RW_IF TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt optional_else
          block_stmt ::= TK_LEFT_CB opt_eols * stmts opt_eols TK_RIGHT_CB
          assign_stmt ::= * TK_VAR OP_ASSIGN expr
          print_stmt ::= * RW_PRINT expr TK_COMMA conv_type

                      RW_WHILE shift        40     
                         RW_IF shift        37     
                        TK_VAR shift        33     
                      RW_PRINT shift        11     
                          stmt shift-reduce 2      stmts ::= stmt
                         stmts shift        16     
                       if_stmt shift-reduce 9      stmt ::= if_stmt
                    while_stmt shift-reduce 10     stmt ::= while_stmt
                    print_stmt shift-reduce 8      stmt ::= print_stmt
                   assign_stmt shift-reduce 7      stmt ::= assign_stmt

State 5:
          input ::= opt_eols * stmts
          stmts ::= * stmts eols stmt
          stmts ::= * stmt
          stmt ::= * assign_stmt
          stmt ::= * print_stmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          while_stmt ::= * RW_WHILE TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt
          if_stmt ::= * RW_IF TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt optional_else
          assign_stmt ::= * TK_VAR OP_ASSIGN expr
          print_stmt ::= * RW_PRINT expr TK_COMMA conv_type

                      RW_WHILE shift        40     
                         RW_IF shift        37     
                        TK_VAR shift        33     
                      RW_PRINT shift        11     
                          stmt shift-reduce 2      stmts ::= stmt
                         stmts shift        22     
                       if_stmt shift-reduce 9      stmt ::= if_stmt
                    while_stmt shift-reduce 10     stmt ::= while_stmt
                    print_stmt shift-reduce 8      stmt ::= print_stmt
                   assign_stmt shift-reduce 7      stmt ::= assign_stmt

State 6:
          stmts ::= stmts eols * stmt
          eols ::= eols * TK_EOL
      (5) opt_eols ::= eols *
          stmt ::= * assign_stmt
          stmt ::= * print_stmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          while_stmt ::= * RW_WHILE TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt
          if_stmt ::= * RW_IF TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt optional_else
          assign_stmt ::= * TK_VAR OP_ASSIGN expr
          print_stmt ::= * RW_PRINT expr TK_COMMA conv_type

                        TK_EOL shift-reduce 3      eols ::= eols TK_EOL
                      RW_WHILE shift        40     
                         RW_IF shift        37     
                        TK_VAR shift        33     
                      RW_PRINT shift        11     
                          stmt shift-reduce 1      stmts ::= stmts eols stmt
                       if_stmt shift-reduce 9      stmt ::= if_stmt
                    while_stmt shift-reduce 10     stmt ::= while_stmt
                    print_stmt shift-reduce 8      stmt ::= print_stmt
                   assign_stmt shift-reduce 7      stmt ::= assign_stmt
                     {default} reduce       5      opt_eols ::= eols

State 7:
          stmts ::= stmts eols * stmt
          eols ::= eols * TK_EOL
          stmt ::= * assign_stmt
          stmt ::= * print_stmt
          stmt ::= * if_stmt
          stmt ::= * while_stmt
          while_stmt ::= * RW_WHILE TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt
          if_stmt ::= * RW_IF TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt optional_else
          assign_stmt ::= * TK_VAR OP_ASSIGN expr
          print_stmt ::= * RW_PRINT expr TK_COMMA conv_type

                        TK_EOL shift-reduce 3      eols ::= eols TK_EOL
                      RW_WHILE shift        40     
                         RW_IF shift        37     
                        TK_VAR shift        33     
                      RW_PRINT shift        11     
                          stmt shift-reduce 1      stmts ::= stmts eols stmt
                       if_stmt shift-reduce 9      stmt ::= if_stmt
                    while_stmt shift-reduce 10     stmt ::= while_stmt
                    print_stmt shift-reduce 8      stmt ::= print_stmt
                   assign_stmt shift-reduce 7      stmt ::= assign_stmt

State 8:
          if_stmt ::= RW_IF TK_LEFT_PAR * conditional_expr TK_RIGHT_PAR TK_EOL block_stmt optional_else
          conditional_expr ::= * expr relational_ops expr
          expr ::= * expr OP_ADD term
          expr ::= * expr OP_SUB term
          expr ::= * term
          term ::= * term OP_MUL factor
          term ::= * term OP_DIV factor
          term ::= * factor
          factor ::= * TK_NUMBER
          factor ::= * TK_VAR
          factor ::= * TK_LEFT_PAR expr TK_RIGHT_PAR

                   TK_LEFT_PAR shift        12     
                        TK_VAR shift-reduce 36     factor ::= TK_VAR
                     TK_NUMBER shift-reduce 35     factor ::= TK_NUMBER
                          expr shift        18     
              conditional_expr shift        36     
                          term shift        28     
                        factor shift-reduce 34     term ::= factor

State 9:
          while_stmt ::= RW_WHILE TK_LEFT_PAR * conditional_expr TK_RIGHT_PAR TK_EOL block_stmt
          conditional_expr ::= * expr relational_ops expr
          expr ::= * expr OP_ADD term
          expr ::= * expr OP_SUB term
          expr ::= * term
          term ::= * term OP_MUL factor
          term ::= * term OP_DIV factor
          term ::= * factor
          factor ::= * TK_NUMBER
          factor ::= * TK_VAR
          factor ::= * TK_LEFT_PAR expr TK_RIGHT_PAR

                   TK_LEFT_PAR shift        12     
                        TK_VAR shift-reduce 36     factor ::= TK_VAR
                     TK_NUMBER shift-reduce 35     factor ::= TK_NUMBER
                          expr shift        18     
              conditional_expr shift        39     
                          term shift        28     
                        factor shift-reduce 34     term ::= factor

State 10:
          conditional_expr ::= expr relational_ops * expr
          expr ::= * expr OP_ADD term
          expr ::= * expr OP_SUB term
          expr ::= * term
          term ::= * term OP_MUL factor
          term ::= * term OP_DIV factor
          term ::= * factor
          factor ::= * TK_NUMBER
          factor ::= * TK_VAR
          factor ::= * TK_LEFT_PAR expr TK_RIGHT_PAR

                   TK_LEFT_PAR shift        12     
                        TK_VAR shift-reduce 36     factor ::= TK_VAR
                     TK_NUMBER shift-reduce 35     factor ::= TK_NUMBER
                          expr shift        27     
                          term shift        28     
                        factor shift-reduce 34     term ::= factor

State 11:
          print_stmt ::= RW_PRINT * expr TK_COMMA conv_type
          expr ::= * expr OP_ADD term
          expr ::= * expr OP_SUB term
          expr ::= * term
          term ::= * term OP_MUL factor
          term ::= * term OP_DIV factor
          term ::= * factor
          factor ::= * TK_NUMBER
          factor ::= * TK_VAR
          factor ::= * TK_LEFT_PAR expr TK_RIGHT_PAR

                   TK_LEFT_PAR shift        12     
                        TK_VAR shift-reduce 36     factor ::= TK_VAR
                     TK_NUMBER shift-reduce 35     factor ::= TK_NUMBER
                          expr shift        25     
                          term shift        28     
                        factor shift-reduce 34     term ::= factor

State 12:
          expr ::= * expr OP_ADD term
          expr ::= * expr OP_SUB term
          expr ::= * term
          term ::= * term OP_MUL factor
          term ::= * term OP_DIV factor
          term ::= * factor
          factor ::= * TK_NUMBER
          factor ::= * TK_VAR
          factor ::= * TK_LEFT_PAR expr TK_RIGHT_PAR
          factor ::= TK_LEFT_PAR * expr TK_RIGHT_PAR

                   TK_LEFT_PAR shift        12     
                        TK_VAR shift-reduce 36     factor ::= TK_VAR
                     TK_NUMBER shift-reduce 35     factor ::= TK_NUMBER
                          expr shift        26     
                          term shift        28     
                        factor shift-reduce 34     term ::= factor

State 13:
          assign_stmt ::= TK_VAR OP_ASSIGN * expr
          expr ::= * expr OP_ADD term
          expr ::= * expr OP_SUB term
          expr ::= * term
          term ::= * term OP_MUL factor
          term ::= * term OP_DIV factor
          term ::= * factor
          factor ::= * TK_NUMBER
          factor ::= * TK_VAR
          factor ::= * TK_LEFT_PAR expr TK_RIGHT_PAR

                   TK_LEFT_PAR shift        12     
                        TK_VAR shift-reduce 36     factor ::= TK_VAR
                     TK_NUMBER shift-reduce 35     factor ::= TK_NUMBER
                          expr shift        31     
                          term shift        28     
                        factor shift-reduce 34     term ::= factor

State 14:
          expr ::= expr OP_SUB * term
          term ::= * term OP_MUL factor
          term ::= * term OP_DIV factor
          term ::= * factor
          factor ::= * TK_NUMBER
          factor ::= * TK_VAR
          factor ::= * TK_LEFT_PAR expr TK_RIGHT_PAR

                   TK_LEFT_PAR shift        12     
                        TK_VAR shift-reduce 36     factor ::= TK_VAR
                     TK_NUMBER shift-reduce 35     factor ::= TK_NUMBER
                          term shift        29     
                        factor shift-reduce 34     term ::= factor

State 15:
          expr ::= expr OP_ADD * term
          term ::= * term OP_MUL factor
          term ::= * term OP_DIV factor
          term ::= * factor
          factor ::= * TK_NUMBER
          factor ::= * TK_VAR
          factor ::= * TK_LEFT_PAR expr TK_RIGHT_PAR

                   TK_LEFT_PAR shift        12     
                        TK_VAR shift-reduce 36     factor ::= TK_VAR
                     TK_NUMBER shift-reduce 35     factor ::= TK_NUMBER
                          term shift        30     
                        factor shift-reduce 34     term ::= factor

State 16:
          stmts ::= stmts * eols stmt
          eols ::= * eols TK_EOL
          eols ::= * TK_EOL
          opt_eols ::= * eols
      (6) opt_eols ::= *
          block_stmt ::= TK_LEFT_CB opt_eols stmts * opt_eols TK_RIGHT_CB

                        TK_EOL shift-reduce 4      eols ::= TK_EOL
                      opt_eols shift        32     
                          eols shift        6      
                     {default} reduce       6      opt_eols ::=

State 17:
          eols ::= * eols TK_EOL
          eols ::= * TK_EOL
          opt_eols ::= * eols
      (6) opt_eols ::= *
          block_stmt ::= TK_LEFT_CB * opt_eols stmts opt_eols TK_RIGHT_CB

                        TK_EOL shift-reduce 4      eols ::= TK_EOL
                      opt_eols shift        4      
                          eols shift        34     
                     {default} reduce       6      opt_eols ::=

State 18:
          conditional_expr ::= expr * relational_ops expr
          relational_ops ::= * OP_GT
          relational_ops ::= * OP_LT
          relational_ops ::= * OP_GT_EQUAL
          relational_ops ::= * OP_LT_EQUAL
          relational_ops ::= * OP_NOT_EQUAL
          relational_ops ::= * OP_EQUAL
          expr ::= expr * OP_ADD term
          expr ::= expr * OP_SUB term

                         OP_GT shift-reduce 18     relational_ops ::= OP_GT
                         OP_LT shift-reduce 19     relational_ops ::= OP_LT
                   OP_GT_EQUAL shift-reduce 20     relational_ops ::= OP_GT_EQUAL
                   OP_LT_EQUAL shift-reduce 21     relational_ops ::= OP_LT_EQUAL
                  OP_NOT_EQUAL shift-reduce 22     relational_ops ::= OP_NOT_EQUAL
                      OP_EQUAL shift-reduce 23     relational_ops ::= OP_EQUAL
                        OP_ADD shift        15     
                        OP_SUB shift        14     
                relational_ops shift        10     

State 19:
          print_stmt ::= RW_PRINT expr TK_COMMA * conv_type
          conv_type ::= * RW_BIN
          conv_type ::= * RW_DEC
          conv_type ::= * RW_HEX

                        RW_BIN shift-reduce 26     conv_type ::= RW_BIN
                        RW_DEC shift-reduce 27     conv_type ::= RW_DEC
                        RW_HEX shift-reduce 28     conv_type ::= RW_HEX
                     conv_type shift-reduce 25     print_stmt ::= RW_PRINT expr TK_COMMA conv_type

State 20:
          term ::= term OP_DIV * factor
          factor ::= * TK_NUMBER
          factor ::= * TK_VAR
          factor ::= * TK_LEFT_PAR expr TK_RIGHT_PAR

                   TK_LEFT_PAR shift        12     
                        TK_VAR shift-reduce 36     factor ::= TK_VAR
                     TK_NUMBER shift-reduce 35     factor ::= TK_NUMBER
                        factor shift-reduce 33     term ::= term OP_DIV factor

State 21:
          term ::= term OP_MUL * factor
          factor ::= * TK_NUMBER
          factor ::= * TK_VAR
          factor ::= * TK_LEFT_PAR expr TK_RIGHT_PAR

                   TK_LEFT_PAR shift        12     
                        TK_VAR shift-reduce 36     factor ::= TK_VAR
                     TK_NUMBER shift-reduce 35     factor ::= TK_NUMBER
                        factor shift-reduce 32     term ::= term OP_MUL factor

State 22:
      (0) input ::= opt_eols stmts *
          stmts ::= stmts * eols stmt
          eols ::= * eols TK_EOL
          eols ::= * TK_EOL

                             $ reduce       0      input ::= opt_eols stmts
                        TK_EOL shift-reduce 4      eols ::= TK_EOL
                          eols shift        7      

State 23:
          eols ::= * eols TK_EOL
          eols ::= * TK_EOL
          optional_else ::= RW_ELSE * eols block_stmt

                        TK_EOL shift-reduce 4      eols ::= TK_EOL
                          eols shift        1      

State 24:
          if_stmt ::= RW_IF TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt * optional_else
          optional_else ::= * RW_ELSE eols block_stmt
     (14) optional_else ::= *

                       RW_ELSE shift        23     
                       RW_ELSE reduce       14      ** Parsing conflict **
                 optional_else shift-reduce 12     if_stmt ::= RW_IF TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt optional_else
                     {default} reduce       14     optional_else ::=

State 25:
          print_stmt ::= RW_PRINT expr * TK_COMMA conv_type
          expr ::= expr * OP_ADD term
          expr ::= expr * OP_SUB term

                      TK_COMMA shift        19     
                        OP_ADD shift        15     
                        OP_SUB shift        14     

State 26:
          expr ::= expr * OP_ADD term
          expr ::= expr * OP_SUB term
          factor ::= TK_LEFT_PAR expr * TK_RIGHT_PAR

                  TK_RIGHT_PAR shift-reduce 37     factor ::= TK_LEFT_PAR expr TK_RIGHT_PAR
                        OP_ADD shift        15     
                        OP_SUB shift        14     

State 27:
     (17) conditional_expr ::= expr relational_ops expr *
          expr ::= expr * OP_ADD term
          expr ::= expr * OP_SUB term

                        OP_ADD shift        15     
                        OP_SUB shift        14     
                     {default} reduce       17     conditional_expr ::= expr relational_ops expr

State 28:
     (31) expr ::= term *
          term ::= term * OP_MUL factor
          term ::= term * OP_DIV factor

                        OP_MUL shift        21     
                        OP_DIV shift        20     
                     {default} reduce       31     expr ::= term

State 29:
     (30) expr ::= expr OP_SUB term *
          term ::= term * OP_MUL factor
          term ::= term * OP_DIV factor

                        OP_MUL shift        21     
                        OP_DIV shift        20     
                     {default} reduce       30     expr ::= expr OP_SUB term

State 30:
     (29) expr ::= expr OP_ADD term *
          term ::= term * OP_MUL factor
          term ::= term * OP_DIV factor

                        OP_MUL shift        21     
                        OP_DIV shift        20     
                     {default} reduce       29     expr ::= expr OP_ADD term

State 31:
     (24) assign_stmt ::= TK_VAR OP_ASSIGN expr *
          expr ::= expr * OP_ADD term
          expr ::= expr * OP_SUB term

                        OP_ADD shift        15     
                        OP_SUB shift        14     
                     {default} reduce       24     assign_stmt ::= TK_VAR OP_ASSIGN expr

State 32:
          block_stmt ::= TK_LEFT_CB opt_eols stmts opt_eols * TK_RIGHT_CB

                   TK_RIGHT_CB shift-reduce 15     block_stmt ::= TK_LEFT_CB opt_eols stmts opt_eols TK_RIGHT_CB

State 33:
          assign_stmt ::= TK_VAR * OP_ASSIGN expr

                     OP_ASSIGN shift        13     

State 34:
          eols ::= eols * TK_EOL
      (5) opt_eols ::= eols *

                        TK_EOL shift-reduce 3      eols ::= eols TK_EOL
                     {default} reduce       5      opt_eols ::= eols

State 35:
          if_stmt ::= RW_IF TK_LEFT_PAR conditional_expr TK_RIGHT_PAR * TK_EOL block_stmt optional_else

                        TK_EOL shift        2      

State 36:
          if_stmt ::= RW_IF TK_LEFT_PAR conditional_expr * TK_RIGHT_PAR TK_EOL block_stmt optional_else

                  TK_RIGHT_PAR shift        35     

State 37:
          if_stmt ::= RW_IF * TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt optional_else

                   TK_LEFT_PAR shift        8      

State 38:
          while_stmt ::= RW_WHILE TK_LEFT_PAR conditional_expr TK_RIGHT_PAR * TK_EOL block_stmt

                        TK_EOL shift        3      

State 39:
          while_stmt ::= RW_WHILE TK_LEFT_PAR conditional_expr * TK_RIGHT_PAR TK_EOL block_stmt

                  TK_RIGHT_PAR shift        38     

State 40:
          while_stmt ::= RW_WHILE * TK_LEFT_PAR conditional_expr TK_RIGHT_PAR TK_EOL block_stmt

                   TK_LEFT_PAR shift        9      

----------------------------------------------------
Symbols:
    0: $:
    1: TK_EOL
    2: RW_WHILE
    3: TK_LEFT_PAR
    4: TK_RIGHT_PAR
    5: RW_IF
    6: RW_ELSE
    7: TK_LEFT_CB
    8: TK_RIGHT_CB
    9: OP_GT
   10: OP_LT
   11: OP_GT_EQUAL
   12: OP_LT_EQUAL
   13: OP_NOT_EQUAL
   14: OP_EQUAL
   15: TK_VAR
   16: OP_ASSIGN
   17: RW_PRINT
   18: TK_COMMA
   19: RW_BIN
   20: RW_DEC
   21: RW_HEX
   22: OP_ADD
   23: OP_SUB
   24: OP_MUL
   25: OP_DIV
   26: TK_NUMBER
   27: error:
   28: stmt: RW_WHILE RW_IF TK_VAR RW_PRINT
   29: stmts: RW_WHILE RW_IF TK_VAR RW_PRINT
   30: block_stmt: RW_WHILE RW_IF TK_LEFT_CB TK_VAR RW_PRINT
   31: if_stmt: RW_IF
   32: while_stmt: RW_WHILE
   33: optional_else: <lambda> RW_ELSE
   34: print_stmt: RW_PRINT
   35: assign_stmt: TK_VAR
   36: expr: TK_LEFT_PAR TK_VAR TK_NUMBER
   37: conditional_expr: TK_LEFT_PAR TK_VAR TK_NUMBER
   38: relational_ops: OP_GT OP_LT OP_GT_EQUAL OP_LT_EQUAL OP_NOT_EQUAL OP_EQUAL
   39: term: TK_LEFT_PAR TK_VAR TK_NUMBER
   40: factor: TK_LEFT_PAR TK_VAR TK_NUMBER
   41: conv_type: RW_BIN RW_DEC RW_HEX
   42: input: TK_EOL RW_WHILE RW_IF TK_VAR RW_PRINT
   43: opt_eols: <lambda> TK_EOL
   44: eols: TK_EOL
